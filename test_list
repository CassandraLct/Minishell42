 echo bonjour ; |
 echo bonjour | |
 |
 echo bonjour |;
 echo bonjour ; ls
 echo bonjour > test\ 1
 cd $HOME/Documents
 echo "\s" & echo "\s"
 echo >
 echo -n -n -nnnn -nnnnm
 cat /dev/random | head -n 1 | cat -e
 unset var1 # with undefined var1
 export "" et unset ""
 echo test > file test1
 $
 not_cmd bonjour > salut
 env puis export puis env # vars aren't sorted
 cat Makefile | grep pr | head -n 5 | cd test (mybin) # check status code
 cat Makefile | grep pr | head -n 5 | cat test (bin) # check status code
 cat Makefile | grep pr | head -n 5 | hello (NA) # check status code
 echo bonjour >>> test
 echo bonjour > > out
 echo 2 >> out1 > out2
 echo 2 > out1 >> out2
 cat < test # with non-existent test
 export var; export var=test
 echo bonjour > $test # with test not defined
 file_name_in_current_dir
 cd ../../../../../.. ; pwd
 ctrl-C . 130 sur bin(ex : sleep 10)&line vide
 ctrl-\ .131 sur bin
 echo "bip | bip ; coyotte > < " "
 cat | cat | cat | ls # check outputs order
 $bla # with bla not defined
 export var ="cat Makefile | grep >"
 export "test=ici"=coucou
 c$var Makefile # with var=at
 $LESS$VAR
 /bin/echo bonjour
 not_cmd
 sleep 5 | exit
 echo bonjour > $test w/ t
 "exit retour a la ligne"
 minishell # binary not in path without "./" before
 cat diufosgid # check exit code
 exit # should return the last exit code value
 exit -10
 exit +10
 ;
 echo coucou | ;
 echo "$HOME"
 echo '$HOME'
 export ; env # display is different for both commands
 echo $HOME => OK
 > log echo coucou => OK
 echo hudifg d | | hugdfihd => bug bash: syntax error near unexpected token `|'
 echo => OK
 echo simple =>OK
 echo -n simple => OK
 echo '' => bug
 echo "" => bug
 echo "\" => bug
 echo "\n \n \n" => OK
 echo "\n \n \\n" => bug
 echo ;; => no test
 echo hi";" hihi => no test
 echo hi " ; " hihi => no test
 cd => OK
 cd . => OK
 cd ~ => OK
 cd / => OK
 cd .. => bug a la racine
 cd no_file => OK
 cd a b c d => OK
 pwd a => OK
 pwd a b c d => OK
 export LOL=lala ROR=rara => OK
 unset LOL ROR => OK
 export "HI= hi" => OK
 export "HI =hi" => bug `HI =hi': not a valid identifier
 /bin/ls => bug
 # write something the press ctrl+c => bug ne dois pas ecrire ^C
 # write something then press ctrl+d
 # write something then press ctrl+\
 echo $? => OK
 l^Ds => bug print wrong command
 echo | => bug
 | echo =>bug bash: syntax error near unexpected token `>'
 sort | ls # check output order => OK
 cat < > => bug bash: syntax error near unexpected token `>'
 cat < < => bug bash: syntax error near unexpected token `>'
 cat > > => bug bash: syntax error near unexpected token `>'
 > a ls > b < Makefile => OK
 echo > a Hello World! => OK
 > a echo Hello World! => OK
 cat < Makefile | grep gcc > output => OK
 exit 0 | exit 1 => bug
 exit 1 | exit 0 => bug
 exit 9999999999999999999999999999999999999999999999999999999999999999999999
 cat >